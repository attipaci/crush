# ===========================================================================
# CRUSH default configuration for SOFIA/HAWC+
#
# Author: Attila Kovacs <attila@submm.caltech.edu>
# Description:
# 	This configuration file is automatically loaded when crush is started
#       with hawc+ as the instrument. Users may define their own startup
#       configuration in ~/.crush2/hawc+/default.cfg which will be parsed
#       immediately after the global defaults contained here.
# See: crush/README, crush/hawc+/README
# ===========================================================================

# Load the global default configuration for SOFIA
load sofia/default.cfg

# The ordering of models in the default reduction pipeline. 
ordering offsets, drifts, correlated.obs-channels, correlated.telescope-x, correlated.accel-mag, weighting.frames, filter, weighting, despike, correlated.polarrays, correlated.subarrays, correlated.gradients, correlated.mux, correlated.pins, source

# If 'calibrated' is set, CRUSH will produce Level 3 data for single scans
# Otherwise, the default is to produce Level 2 data for single scans
#calibrated

# Activate DRP messages over TCP/IP
drp

# Various options for the DRP messaging service...
drp.host 127.0.0.1
drp.port 50747
drp.id hawc.pipe.step.crush
drp.fifo 100
drp.timeout 1.0
drp.timestamp

# Whether to flag out data blocks around fluxjumps...
flagjumps

# If segmenting long scans into shorter integrations then make sure that gains
# span entire scans.
[segment] gains.span

# Do not write PNG thumbnails by default...
forget write.png

# Do fewer than usual rounds in 'extended' mode...
[extended] rounds 10

# Use 'noiseless' option to reduce noiseless simulations...
[noiseless] blacklist weighting,weighting.frames,despike,whiten
[noiseless] array.nogains

# Use the faster maximum-likelihood estimation from the start...
estimator maximum-likelihood

# Pointing center (row,col)
#pcenter 19.5,33.5

# The array (R) rotation in the Nasmyth focus.
#rotation 0.0

# The rotation of the T array relative to R.
rotation.R0 0.0
rotation.R1 180.0
rotation.T0 0.0
rotation.T1 180.0

# Subarray offsets (in pixels)
offset.R0 0.0,0.0
offset.R1 67.03,-39.0
offset.T0 0.0,0,0
offset.T1 67.03,-39.0

# zoom constants (T vs R)
zoom.T 1.0

# 1/f stability timescale in seconds
stability 10.0

# The minimum length of a valid scan in seconds.
subscan.minlength 10.0

# Specify the unit of the raw data
dataunit counts

# Specify the output units
unit Jy/beam

# Use long windows initially s.t. there is enough common mode to solve for
# gains
drifts 30.0

# The gain conversion to readout units
gain 1.0

# The appropriate Jy/K conversion value
#K2Jy 6.4

# Use 'pols' as a shorthand for 'correlated.polarrays'
alias.pols correlated.polarrays

# Use 'subs' as a shorthand for 'correlated.subarrays'
alias.subs correlated.subarrays

# Use 'mux' as a shorthand for 'correlated.mux'
alias.mux correlated.mux

# Decorrelate on polarization arrays
pols

# Decorrelate on detector subarrays
#subs

# Decorrelate on SQUID multiplexed channels
mux

# Decorrelate on geometric detector rows
#rows

# Decorrelate on geometric detector columns
# cols

# Set the observing band based on the SPECTEL1 header value
fits.[SPECTEL1?HAW_A] band A
fits.[SPECTEL1?HAW_B] band B
fits.[SPECTEL1?HAW_C] band C
fits.[SPECTEL1?HAW_D] band D
fits.[SPECTEL1?HAW_E] band E

# Load the appropriate configuration for each band
[band?A] config band-A.cfg
[band?B] config band-B.cfg
[band?C] config band-C.cfg
[band?D] config band-D.cfg
[band?E] config band-E.cfg

# List of FITS keys to add (on top of additional SOFIA keys)
fits.addkeys {&fits.addkeys},INSTCFG

