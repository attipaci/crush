# ===========================================================================
# CRUSH default configuration for SOFIA/HAWC+
#
# Author: Attila Kovacs <attila@submm.caltech.edu>
# Description:
# 	This configuration file is automatically loaded when crush is started
#       with hawc+ as the instrument. Users may define their own startup
#       configuration in ~/.crush2/hawc+/default.cfg which will be parsed
#       immediately after the global defaults contained here.
# See: crush/README, crush/hawc+/README
# ===========================================================================

# Load SOFIA defaults
config sofia/default.cfg


# The ordering of models in the default reduction pipeline. 
ordering dejump, offsets, drifts, correlated.obs-channels, correlated.nonlinearity, correlated.polarrays, correlated.telescope-x, correlated.chopper-x, correlated.chopper-y, correlated.accel-mag, weighting.frames, filter, weighting, despike, correlated.subarrays, correlated.gradients, correlated.bias, correlated.series, correlated.mux, correlated.rows, source

# Set keywords identifying specific runs/periods...
date.[*--2016.07.01] apr2016
date.[2016.09.01--2016.11.01] oct2016
date.[2016.11.30--2016.12.20] dec2016

# Select specific subarrays only
subarray T0,R0
[apr2016] forget subarray
#[apr2016] subarray T0,R1

# when pointing to the center of R0/R1, automatically use all subarrays in
# the reduction...
fits.[SIBS_X?33.5] forget subarray

# If 'calibrated' is set, CRUSH will produce Level 3 data for single scans
# Otherwise, the default is to produce Level 2 data for single scans
#calibrated

# Activate DRP messages over TCP/IP
#drp

# Various options for the DRP messaging service...
drp.host 127.0.0.1
drp.port 50747
drp.id hawc.pipe.step.crush
drp.fifo 100
drp.timeout 1.0
drp.timestamp

# When running in the SOFIA pipeline (assuming that TCP/IP messaging enabled 
# via the 'drp' option), then disable PNG thumbnail generation to prevent any
# possinble internal Java errors due to missing/broken X11 display connections.
[drp] forget write.png

# When running reductions via the DRP, smooth images slightly for better visual
# appearance
[drp] iteration.[last] smooth halfbeam

# Shift data relative to coordinates by the specified amount (seconds).
shift -0.014

# Discard slow scanning frames with entirely (instead of just flagging them).
vclip.strict

# starting Oct 2016 run, assume real-time object coordinates (rtoc) are 
# recorded in the FITS for all sourcess, regardless of whether they are 
# sidereal or not.
rtoc

# Try to remove flux jumps gracefully...
#iteration.[last-1] dejump
#dejump.subarray R1

# Whether 'fix' flux jumps
#iteration.[last-1] fixjumps

# Map even if many pixels are flagged
mappingfraction 0.2

# Use data recorded between scans
#betweenscans

# Use the faster maximum-likelihood estimation from the start...
estimator maximum-likelihood

# Set the initial 1/f timescale..
drifts 30

# When using non-linear response corrections, make sure the drift window covers
# the entire scan...
[correlated.nonlinearity] drifts max

# Flag pixels outside an acceptable range of relative noise levels
weighting.noiserange 0.3:3.0

# Never smooth focus scans...
fits.[CALMODE?Focus] iteration.[last] blacklist smooth

# Flag some MUX lines that seem to be always bad...
flag.mux 6,20,24,27-34,40,46-48,50,63,70,86

# Flag only MUXes that seem really dead
# flag.mux 6,20,27-32,46-48,50,70,86

# Flag only MUXes that seem to produce crazy source reponse
# flag.mux 24,33,34,40,49,63,127

# Flag rows that seem always bad
flag.row 2,19,52,82,83,87,114,122,65,69,77

# Flag only rows that seem to be blind...
#flag.row 2,19

# Flag only rows that seem to have strange source response...
#flag.row 82,83,87,114,122

# Flag some more baddies
#flag R1[24,16]:R1[24,31],R1[28,16]:R1[28,31],R1[36,16]:R1[36:31]

# The overall rotation of the array from crush x,y coordinates to SI x,y.
rotation 180.9

# The relative rotations of the subarrays.
rotation.R0 0.0
rotation.R1 180.0
rotation.T0 0.6
#rotation.T1 180.6

# Subarray offsets (in pixels)
offset.R0 0.0,0.0
offset.R1 67.03,39.0
offset.T0 0.26,-0.57
#offset.T1 

# nominal:
#offset.R1 67.03,39.0

# zoom constants (T vs R)
zoom.T 1.004

# 1/f stability timescale in seconds
stability 5.0
[extended] stability 10.0

# Use shorter 'stability' timescale for short scans, such as focus scans, to
# get the crispest possible images...
obstime.[<45] stability 2.5

# The minimum length of a valid scan in seconds.
subscan.minlength 5.0

# Specify the unit of the raw data
dataunit counts

# Specify the output units
unit Jy/beam

# The gain conversion to readout units
gain -1.0

# Assumes sign of source signals +, -, or 0
source.sign +

# The appropriate Jy/K conversion value (assuming 2.5m, 95% forward eff.)
#K2Jy 582

# For chopped data, remove the chopper-induced correlated signals...
[chopped] correlated.chopper-x
[chopped] correlated.chopper-y

# Shift chopper data to align with detectors
chopper.shift 2

# Set a tolerance (arcsec) for the chopper signal. It has to be within the 
# nominal amplitude value for the frame to be used. This is useful to avoid 
# smearing when reducing chopped data...
chopper.tolerance 10

# Define various shorthands for decorrelations
alias.nonlinearity correlated.nonlinearity
alias.pols correlated.polarrays
alias.subs correlated.subarrays
alias.biaslines correlated.bias
alias.mux correlated.mux
alias.rows correlated.rows
alias.series correlated.series

# The range of acceptable relative sky-noise gains.
array.signed
array.gainRange 0.3:3.0

# Decorrelate on polarization arrays
#pols

# Decorrelated on TES bias lines
biaslines
biaslines.gainrange -10:10

# Decorrelate on the series arrays (heat-sinking of columns)
iteration.[last-1] series
series.nogains

# Decorrelate on SQUID multiplexed channels
#mux
mux.nogains
mux.gainrange 0.1:10
#iteration.[2] forget mux.nogains

# Decorrelate on detector rows (i.e. MUX address lines)
#rows
rows.gainrange 0.1:10

# Fit skydips on restricted elevation range only...
skydip.elrange 18:55

# For skydips, notch out the intcal signal (203.25 Hz / 68 -- and harmonics)
[source.type?skydip] notch
[intcalfreq?!-9999.0] notch.frequencies {?intcalfreq}
notch.width 0.03
notch.harmonics 35

# Don't decorrelated the chopper signal for skydips...
[source.type?skydip] blacklist correlated.chopper-x, correlated.chopper-y
[source.type?skydip] blacklist chopped
#[source.type?skydip] write.png

# Downsample skydips by a fixed amount...
#[source.type?skydip] downsample 50

# List of FITS keys to add (on top of additional SOFIA keys)
fits.addkeys {&fits.addkeys},INSTCFG

# Reduce skydips if OBSMODE, CALMODE or DIAGMODE os set to SKYDIP
fits.[DIAGMODE?SKYDIP] skydip
fits.[OBSMODE?SkyDip] skydip

# Set the observing band based on the SPECTEL1 header value
fits.[SPECTEL1?HAW_A] band A
fits.[SPECTEL1?HAW_B] band B
fits.[SPECTEL1?HAW_C] band C
fits.[SPECTEL1?HAW_D] band D
fits.[SPECTEL1?HAW_E] band E

# Transfer FITS header keys to configuration options...
fits.assign.DIAG_HZ intcalfreq

# Load date-based configuration overrides...
[apr2016] config hawc+/2016-04.cfg
[oct2016] config hawc+/2016-10.cfg

# Load the appropriate configuration for each band
[band?A] config band-A.cfg
[band?B] config band-B.cfg
[band?C] config band-C.cfg
[band?D] config band-D.cfg
[band?E] config band-E.cfg

# If the 'source.flatfield' option is set, then load appropriate settings
# for flatfield determination...
[source.flatfield] config hawc+/srcflat.cfg

# Never segment scans if using them for determining flatfields.
[write.flatfield] blacklist segment

# If dealing with demodulated data, then load the appropriate 
# settings for reducing it
fits.[PRODTYPE?demod] config demod.cfg
