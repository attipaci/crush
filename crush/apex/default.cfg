# This is a common default configuration file for all APEX intruments
# It should be loaded automatically by the various APEX instruments while 
# establishing the instrument specific defaults

# Define some useful shorthands for APEX
alias.accel correlated.accel-mag
alias.chopper correlated.chopper-x

# Time-scale (in seconds) two which position information ought to be smoothed.
positions.smooth 0.048

# The 1-sigma time window (in hours) for obtaining local average tau values.
tau.window 2.0

# The 1-sigma time window (in hours) for obtaining local average calibration 
# scaling.
scale.window 1.0

# Define a radius for local pixel neighbours (e.g. for refining photometry)
# in terms of the beam size. If you do not want to use the neighbour-based
# refinement method for the photometry, set it to zero.
neighbours.radius 7.0

# For chopped photometry, use maximum-likelihood all the way
[chopped] estimator maximum-likelihood

# No DC levelling needed for chopped photometry.
[chopped] forget level

# Remove the scan synchronous signals, e.g. telescope vibrations.
#filter.motion
[chopped] blacklist filter.motion

# Reset the number of iterations for chopped photometry
#[chopped] rounds 5

# The minimum length of a valid integration (subscan) in seconds.
subscan.minlength 2.0

# For chopped data, remove the correlated component of the phase data also
[chopped] phases

# Always use maximum-likelihood estimators for the chop phases
[chopped] phases.estimator maximum-likelihood

# Derive pixel weights from the phases, separate from the high-frequency 
# weights. This is a good idea if the phases are in the 1/f regime.
[chopped] iteration.[3] phaseweights

# When deriving proper phase weights, also despike the phase data together with
# the regular despiking of samples.
[phaseweights] phasedespike

# For chopped data derive array gains from the correlated phases rather than
# from the fast samples, given that the correlated sky has a strong 1/f^2 
# spectrum.
[chopped] array.phasegains
[chopped] boxes.phasegains
[chopped] cables.phasegains

# For chopped data, do not attempt deriving sky-noise gains at all. Just use the
# ones from the pixel data. This is a fallback method in case the 'phasegains'
# above seem to misbehave.
#[chopped] array.nogains

# For chopped data, use fixed source gains rather than coupled directly to
# the sky noise gains. (These are read from the RCP file if 'rcp.gains' is set,
# otherwise from the pixel data file.) 
[chopped] source.fixedgains

# Delay gain solution for correlated cables when doinf photometry
[chopped] cables.nogains
[chopped] iteration.[2] forget cables.nogains

# For chopped data, gains to span entire scans (instead of subscans).
[chopped] gains.span

# Remove DC offsets from the pixel timestreams at the beginning of each 
# iteration when analysing chopped data.
[chopped] offsets

# When reducing chopped data use neighbours method to despike...
# (overrides 'absolute' setting in faint.cfg)
[chopped] iteration.[2] despike.method neighbours

# Whiten only above mean noise, nor below...
[chopped] forget whiten.below

# Do not whiten under any circumstances for chopped data
[chopped] blacklist whiten


