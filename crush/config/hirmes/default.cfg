# ===========================================================================
# CRUSH default configuration for SOFIA/HIRMES
#
# Author: Attila Kovacs <attila[AT]sigmyne.com>
# Description:
# 	This configuration file is automatically loaded when crush is started
#       with hirmes as the instrument. Users may define their own startup
#       configuration in ~/.crush2/hirmes/default.cfg which will be parsed
#       immediately after the global defaults contained here.
# See: crush/README, crush/hirmes/README
# ===========================================================================

# For now, we only have simulated data...
sim
[sim] array.nogains
[sim] blacklist weighting.noiserange

# Load SOFIA defaults
config sofia/default.cfg

# The ordering of models in the default reduction pipeline. 
ordering offsets, drifts, correlated.obs-channels, correlated.sky, correlated.chopper-x, correlated.chopper-y, weighting.frames, filter, weighting, despike, correlated.subarrays, correlated.gradients, correlated.bias, correlated.series, correlated.mux, correlated.pins, correlated.rows, correlated.cols, source

# If 'calibrated' is set, CRUSH will produce Level 3 data for single scans
# Otherwise, the default is to produce Level 2 data for single scans
#calibrated

# By default produce spectral maps, except when in imaging mode. Then, produce
# regular 2D maps.
source.type spectralmap
[spectral] source.type.lock spectralmap

# Compress spectral cubes with gzip...
[source.type?spectralmap] gzip

# Specify the unit of the raw data
dataunit counts

# Unit in spectral direction, e.g. 'um', 'GHz'...
spectral.unit um

# Specify the output units
unit Jy/beam
#unit Jy/pixel

# The gain conversion to readout units
#gain -1.0

# Assumes sign of source signals +, -, or 0
source.sign 0
fits.[INSTCFG?IMAGING] source.sign +

# The minimum length of a valid scan in seconds.
subscan.minlength 5.0

# Set a tolerance (arcsec) for the chopper signal. It has to be within the 
# nominal amplitude value for the frame to be used. This is useful to avoid 
# smearing when reducing chopped data...
chopper.tolerance 3

# Discard slow scanning frames with entirely (instead of just flagging them).
vclip.strict

# Allow velocity clip for chopped data (mapping mode)
[chopped] recall vclip

# Apply correction for gyro drifts
#gyrocorrect

# Set a limit to what's the largest gyro drift that can be corrected...
# (in arcsec)
gyrocorrect.max 30

# Map even if many pixels are flagged
mappingfraction 0.2

# Use the faster maximum-likelihood estimation from the start...
estimator maximum-likelihood

# Set the initial 1/f timescale..
drifts 30

# When using non-linear response corrections, make sure the drift window covers
# the entire scan...
[correlated.nonlinearity] drifts max

# 1/f stability timescale in seconds
stability 5.0
[extended] stability 10.0

# Use shorter 'stability' timescale for short scans, such as focus scans, to
# get the crispest possible images...
#obstime.[<45] stability 2.5

# The overall rotation of the array from crush x,y coordinates to SI x,y.
rotation 0.0
#rotation 28.97

# The relative rotations of the subarrays.
rotation.blue 0.0
rotation.red 0.0
rotation.hires 0.0

# Subarray offsets (in lores pixels)
offset.blue -7.816,0.0
offset.red -40.175,0.0
offset.hires 0.0,0.0

# Imaging aperture size (arcsec) for the spectral imaging mode.
#imaging.aperture 119x103
[sim] imaging.aperture 117.1

# Flag pixels outside an acceptable range of relative noise levels
weighting.noiserange 0.3:3.0

# Use neighbor-based despiking all the way...
despike.method.lock neighbours

# Define various shorthands for decorrelations
alias.subs correlated.subarrays
alias.biaslines correlated.bias
alias.mux correlated.mux
alias.pins correlated.pins
alias.rows correlated.rows
alias.cols correlated.cols
alias.series correlated.series

# The range of acceptable relative sky-noise gains.
array.signed
array.gainRange 0.3:3.0

# Decorrelate sky signal (separated from temperature signal)
#[pixeldata] sky

# If the couplings are merged into the correlated gains, then do not
# decorrelate on sky separately...
[sourcegains] blacklist sky

# Decorrelated on TES bias lines
#biaslines
biaslines.gainrange 0.3:3.0

# Decorrelate on the series arrays (heat-sinking)
#iteration.[last-1] series
series.nogains

# Decorrelate on SQUID multiplexed channels
#mux
mux.nogains
mux.gainrange 0.3:3.0
#iteration.[2] forget mux.nogains

# Decorrelate on SQUID multiplexing sequence (pins)
#pins
pins.nogains
pins.gainrange 0.3:3.0

# Decorrelate on detector rows (i.e. MUX address lines)
#rows
rows.gainrange 0.3:3.0

# Decorrelate on geometric detector columns
#cols
cols.gainrange 0.3:3.0

# For chopped data, remove the chopper-induced correlated signals...
[chopped] correlated.chopper-x
[chopped] correlated.chopper-y

# Use's Bill Vacca's ATRAN-based polynomial model for calculating opacity...
#tau atran

# Use the measured PWV to calculate tau...
#tau pwv

# Calculate typical PWV values, instead of using the monitor data
#tau pwvmodel

# Refer opacity relations to the PWV value (which is recorded)
tau.pwv.a 1.0
tau.pwv.b 0.0

# Never smooth focus scans...
fits.[CALMODE?Focus] iteration.[last] blacklist smooth

# Reduce skydips if OBSMODE, CALMODE or DIAGMODE is set to SKYDIP
fits.[DIAGMODE?SKYDIP] skydip
fits.[OBSMODE?SkyDip] skydip

# Fit skydips on restricted elevation range only...
#skydip.elrange 0:55

# Produce a PNG plot for the skydip result?
#[source.type?skydip] write.png

# Downsample skydips by a fixed amount...
#[source.type?skydip] downsample 50

# Use only parts of the map for source flatfield estimation, which are within
# the specified S/N range...
source.coupling.s2n 5.0:500.0

# Write a flattened image
write.flattened

# Write collapsed spectal data (ASCII)
write.fieldspec
#write.fieldspec.show

# Gnuplot poltting options
#write.fieldspec.nodata ---
write.fieldspec.style histep
#write.fieldspec.lt 3
write.fieldspec.lw 2.0
#write.fieldspec.pt 1
#write.fieldspec.ps 1.0

# Make a PNG plot from the collapsed spectral data
write.fieldspec.png
#write.fieldspec.png.size 853x480
#write.fieldspec.bg transparent

# Make an EPS plot from the collapsed spectral data
write.fieldspec.eps

# Additional header keys to migrate into product headers from earliest scan...
#fits.addkeys CRX, CRY

# logging...
obslog.format date\t flight\t scanno\t mode\t object\t ?skydip\t obsmins(f1)\t chop.flag\t gyro.max(f1)\t ac.altkft(f1)\t tel.el(f1)\t env.pwv(f1)\t env.tamb(f1)\t hirmes.dfoc(f1)
