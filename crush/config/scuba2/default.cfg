# ============================================================================
# SCUBA-2 default configuration for CRUSH
# created on 25 August 2015
# by Attila Kovacs <attila[AT]sigmyne.com>
# ============================================================================

# Define the default SCUBA-2 pipeline order
ordering offsets, drifts, correlated.obs-channels, correlated.telescope-x, correlated.he3, correlated.accel-mag, weighting.frames, filter, weighting, despike, correlated.subarrays, correlated.gradients, correlated.rows, correlated.cols, correlated.blocks, source

# The SCUBA-2 signals are inverted...
gain -1.0

# Use medians for signals/gains
estimator maximum-likelihood

# Produce output in roughly calibrated 'Jy/beam' units.
unit Jy/beam

# Use the 183 GHz tau value stored in the scan for calculating line-of-sight 
# opacities. It's quick, and reasonably accurate. If you want something more
# precise (albeit slower, since it requires downloading a fair bit of data from
# the web) you can use a smoothed local value from the JCMT tau archive by
# setting 'tau=jctables' (or uncommenting the line in the section below this).
tau 183GHz

# Use the JCMT 183 GHz tables as the primary source for tau
# Alternatives are '183GHz' or '225GHz' to use the single measurement recorded
# in scan, or CSO 225 GHz tau in scan.
#tau jctables

# The folder or URL containing the JCMT tau tables
#tau.jctables www.jach.hawaii.edu/weather/opacity/mk/archive
tau.jctables www.eao.hawaii.edu/weather/opacity/mk/archive

# What source of tau to use if JCMT tau is not available...
jctables.fallback 183GHz

# Use ~3 minute time window if using JCMT tau...
[tau?jctables] tau.window 0.05

# By default assume 850um reduction mode
850um

# To process SDF files directly, you can tell crush where to find the Starlink
# 'ndf2fits' utility (Usually <starlink-home>/bin/convert/ndf2fits). 
# If you have set the STARLINK_DIR environment variable to point to your 
# Starlink installation (as is recommended by the Starlink installation 
# procedure) then the line below should just work... 
ndf2fits {@STARLINK_DIR}/bin/convert/ndf2fits

# Ignore subscans that are shorter than a minimum length (in seconds), since
# these may not have sufficient data for a robust gain measurement...
#subscans.minlength 5.0

# Smooth the telescope position data for scan velocity and acceleration cuts 
positions.smooth 0.1

# Discard data when telescope acceleration exceeds the limit below ("/s^2)
#aclip 1000

# Apply dark SQUID correction
#darkcorrect

# Remove the scan synchronous signals, e.g. telescope vibrations.
#filter.motion

# Use the median noise level between 5 and 20 Hz as the target white noise
# level for the noise whitening filter.
#whiten.proberange 1.0:20.0

# Assume that all detectors respond in the same direction to incident power.
array.signed

# Specify the acceptable range of sky-noise gains relative to the typical value.
array.gainrange 0.1:10.0

# Merge subscans into monolithic scans
#subscans.merge

# The maximum gap (seconds) between subscans that can be merged
subscans.merge.maxgap 30.0

# First, we define the relations to the 183GHz radiometer. The definition
# below effectively makes the 183GHz value the implicit parameter 't' against 
# which all other re1ations are defined.
# Thus, all linear relations are measured against the CSO 225GHz values.
tau.225GHz.a 1.0
tau.225GHz.b 0.0

# The 183 GHz tau scaling relative to the 225GHz value
tau.183GHz.a 0.8
tau.183GHz.b 0.0

# Set the wavelength dependent quantities...
# First the 450um configuration...
[450um] forget 850um
[450ym] wavelength 450.0
[450um] beam 7.6
[450um] grid 1.5
[450um] tau.scuba2.a 23.8	
[450um] tau.scuba2.b -0.24

# 450um Integrated (aperture) flux calibration
# Uranus 20110619.45: 156.73 Jy, 2669540 counts: 17033 counts / Jy
#                .84:          , 2643986 counts: 16870 counts / Jy
#        20130218.4 : 147.04 Jy, 2239465 counts: 15231 counts / Jy
#        20140530.75: 150.21 Jy, 2394102 counts: 15938 counts / Jy  
#        20150630.62: 156.71 Jy, 2661220 counts: 16982 counts / Jy 
# Neptune 2012-05-28.52: 61.22 Jy, 782622 counts: 12784 counts / Jy ?
[450um] jansky 16411

# Then, the 850um configuration...
[850um]	forget 450um
[850um] wavelength 850.0
[850um] beam 14.3
[850um] grid 2.5
[850um] tau.scuba2.a 4.9
[850um] tau.scuba2.b -0.05

# 850um Integrated (aperture) flux calibration
# Uranus 20110619.45: 61.12 Jy, 1112559 counts: 18202 counts / Jy
#                .84:         , 1232786 counts: 20169 counts / Jy
#        20130102.5 : 61.30 Jy, 1349244 counts: 22011 counts / Jy
#	 20130218.4 : 57.34 Jy, 1124998 counts: 19620 counts / Jy    
#        20140530.75: 58.58 Jy, 1141841 counts: 19492 counts / Jy
#        20150630.62: 61.11 Jy, 1219853 counts: 19962 counts / Jy
# Neptune 2012-05-28.52: 24.08 Jy, 469694 counts: 19506 counts / Jy 
#
[850um] jansky 19852

# The Jy/K conversion factor (nominal JCMT value)
K2Jy 15.6

# Initial 1/f filter timescale (seconds)....
drifts 10.0

# Set a detector stability of timescale (seconds). 
stability 10.0

# The range of acceptable pixel noise levels relative to median.
weighting.noiserange 0.1:10

# Define sorthands for the correlated modalities/divisions, s.t. these can 
# be accessed more easily, e.g. as 'rows', 'cols', 'blocks'...
# subbarays are 32 rows x 40 cols.
alias.he3 correlated.he3
alias.subarrays correlated.subarrays
alias.rows correlated.rows
alias.cols correlated.cols
alias.blocks correlated.blocks
alias.accel correlated.accel-mag

# Legacy aliases (MUX=row, pin=col)
alias.mux correlated.rows
alias.pins correlated.cols

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
subarrays.gainrange 0.1:10.0

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
rows.gainrange 0.1:10.0

# Set the acceptable range of 'pin' gains, relative to the typical value.
# Each 'pin' is the collection of channels accross the MUXes, which are read
# out in the same position in the multiplexing scheme.
cols.gainrange 0.1:10.0

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
blocks.gainrange 0.1:10.0

# Decorrelate on rows (32 SQUID MUXes on each subarray).
rows
#rows.resolution 0.1

# Decorrelate on cols (40 SQUID address lines on each subarray).
cols
#cols.resolution 0.1

# Require at least 30% of the pixels to be working for the scan to contribute
# to the final map.
mappingfraction 0.3

# The 450um focal-plane is a mirror image of the 850um plane... 
[450um] mirror

# The subarray rotations (deg)
# refined by Attila Kovacs, based on point-source response
s8a.rotation 0.1
s8b.rotation 89.7
s8c.rotation 180.3
s8d.rotation 270.2

s4a.rotation 179.1
s4b.rotation 89.5
s4c.rotation -0.80
s4d.rotation 269.5

# Subarray scalings to make sure flux calibration is independent (more or less)
# of what subarrays are actually available.
s8a.scale 0.63
s8b.scale 1.34
s8c.scale 1.16
s8d.scale 1.00

s4a.scale 1.00
s4b.scale 1.17
s4c.scale 0.62
s4d.scale 0.46

# Now, the scaling relation to PWV vs 186GHz tau:
tau.pwv.a 25.3
tau.pwv.b -0.36

# The SCUBA-2 pixel size in mm (original value from sc2ast.c)
#pixelmm 1.135

# Determined by Attila Kovacs, based on point-source response...
pixelmm 1.1577

# Load the appropriate array geometries for the given date...
mjd.[*:55168.19] config scuba2/new2.cfg
mjd.[55168.19:55621] config scuba2/new3.cfg
mjd.[55621:*] config scuba2/new5.cfg

# Reduce certain objects with the 'bright' setting
#object.[JUPITER] bright
#object.[SATURN] bright
#object.[MARS] bright

# Conditional settings based on scan headers
fits.[OBS_TYPE?pointing] point

