# Define the default SCUBA-2 pipeline order
ordering offsets, drifts, correlated.telescope-x, correlated.temperature, correlated.accel-norm, correlated.obs-channels, weighting.frames, whiten, weighting, despike, despike2, despike3, correlated.gradients, correlated.mux, correlated.pins, correlated.blocks, source

# The SCUBA-2 signals are inverted...
gain -1.0

# Use medians for signals/gains
estimator median
gains.estimator median
iteration.[2] gains.estimator maximum-likelihood

# Produce output in roughly calibrated 'Jy/beam' units.
unit Jy/beam

# Use the 186 GHz tau to calculate in-band opacities, by default.
tau 186GHz

# By default assume 850um reduction mode
850um

# To process SDF files directly, you can tell crush where to find the Starlink
# 'ndf2fits' utility (Usually <starlink-home>/bin/convert/ndf2fits). 
# If the tool is in your default path, then just use the line below, or else
# edit it to reflect the full path to the 'ndf2fits' utility.
ndf2fits ndf2fits

# Ignore subscans that are shorter than a minimum length (in seconds), since
# these may not have sufficient data for a robust gain measurement...
subscans.minlength 5.0

# Smooth the telescope position data for scan velocity and acceleration cuts 
positions.smooth 0.1

# Use the median noise level between 5 and 20 Hz as the target white noise
# level for the noise whitening filter.
whiten.proberange 5.0:20.0

# Assume that all detectors respond in the same direction to incident power.
array.signed

# Specify the acceptable range of sky-noise gains relative to the typical value.
array.gainrange=0.3:3.0

# Process subscans as separate scans, except for pointing observations.
# Because CRUSH processes scans in parallel, but not subscans, this is a 
# practical workaround for parallel processing of subscans. The splitting
# should have a small effect on the output, because of the way scan maps are
# processed. However, the difference should be negligible in most cases. If
# in doubt, simply disable this option, and compare the results...
subscans.split
[point] forget subscans.split

# Set the wavelength dependent quantities...
# First the 850um configuration...
[450um] forget 850um
[450um] pixeldata {$CRUSH}/scuba2/pixel.s4a.dat
[450um] beam 7.6
[450um] grid 1.5
[450um] jansky 1265
[450um] [extended] jansky 2068


# Then, the 450um configuration...
[850um]	forget 450um
[850um] pixeldata {$CRUSH}/scuba2/pixel.s8d.dat
[850um] beam 14.3
[850um] grid 2.5
[850um] jansky 2932
[850um] [extended] jansky 3501

# Configure the subarray geometries...
# First the 850um subarray (s8d)...
s8d.rotation -89.3
s8d.pixelsize 5.65x5.70
s8d.position 21.8,-18.3

# Then the 450um subarray (s4a)...
s4a.mirror
s4a.rotation 180.0
s4a.pixelsize 5.78x5.72
s4a.position -4.6,-36.0

# Initial 1/f filter at 10s timescale....
drifts 10.0 

# Assume a detector stability of 3 seconds. Even though it is longer than the
# true stability (which is ~1s), the slight 1/f excess in the extra band 
# should be more surgically dealt with by the noise whitening filter...
stability 10.0

# Because of rouge pixels it is best to start with median estimators
estimator median
iteration.[2] estimator maximum-likelihood

# The best 850um SCUBA-2 pixels typically have much higher gain than average. 
# Thus, allow for a larger range of sky-gains than usual...
[450um] array.gainrange 0.3:3.0
[850um] array.gainrange 0.3:10.0

# Define sorthands for the correlated modalities/divisions, s.t. these can 
# be accessed more easily as 'mux', 'pins', 'blocks' and 'accel'
alias.mux correlated.mux
alias.pins correlated.pins
alias.blocks correlated.blocks
alias.accel correlated.accel-norm

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
mux.gainrange -10.0:10.0

# Set the acceptable range of 'pin' gains, relative to the typical value.
# Each 'pin' is the collection of channels accross the MUXes, which are read
# out in the same position in the multiplexing scheme.
pins.gainrange -10.0:10.0

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
blocks.gainrange -10.0:10.0

# In the default reduction mode, do not decorrelate on MUXes and pins. And
# definitely disable these for the 'extended' mode...
forget mux
forget pins

# Require at least 30% of the pixels to be working for the scan to contribute
# to the final map.
mappingfraction 0.3

# Smooth the final maps slightly to get rid of some of the pixelization noise.
# The smoothing should result in a marginal increase in beam size, by no more
# than 5%...
#final smooth minimal

# First, we define the relations to the 186GHz radiometer. The definition
# below effectively makes the 186GHz value the implicit parameter 't' against 
# which all other relations are defined.
# Thus, all linear relations are measured against 186GHz radiometer values.
tau.186GHz.a 1.0
tau.186GHz.b 0.0

# Now, the appropriate relations defining the passband tau of GISMO vs the
# 225GHz radiometer value.
[850um] tau.scuba2.a 4.9
[850um] tau.scuba2.b -0.05
[450um] tau.scuba2.a 23.8
[450um] tau.scuba2.b -0.24

# The scaling of 186GHz tau to 225GHz:
tau.225GHz.a 1.25
tau.225GHz.b -0.009

# Now, the scaling relation to PWV vs 186GHz tau:
tau.pwv.a 25.3
tau.pwv.b -0.36


