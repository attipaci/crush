# Define the default SCUBA-2 pipeline order
ordering offsets, drifts, correlated.obs-channels, correlated.telescope-x, correlated.he3, correlated.accel-mag, weighting.frames, filter, weighting, despike, despike2, despike3, correlated.subarrays, correlated.gradients, correlated.rows, correlated.cols, correlated.blocks, source

# The SCUBA-2 signals are inverted...
gain -1.0

# Use medians for signals/gains
estimator maximum-likelihood

# Produce output in roughly calibrated 'Jy/beam' units.
unit Jy/beam

# Use the 183 GHz tau to calculate in-band opacities, by default.
tau 183GHz

# By default assume 850um reduction mode
850um

# To process SDF files directly, you can tell crush where to find the Starlink
# 'ndf2fits' utility (Usually <starlink-home>/bin/convert/ndf2fits). 
# If you have set the STARLINK_DIR environment variable to point to your 
# Starlink installation (as is recommended by the Starlink installation 
# procedure) then the line below should just work... 
ndf2fits {@STARLINK_DIR}/bin/convert/ndf2fits

# Ignore subscans that are shorter than a minimum length (in seconds), since
# these may not have sufficient data for a robust gain measurement...
subscans.minlength 3.0

# Smooth the telescope position data for scan velocity and acceleration cuts 
positions.smooth 0.1

# Remove the scan synchronous signals, e.g. telescope vibrations.
filter.motion

# Use the median noise level between 5 and 20 Hz as the target white noise
# level for the noise whitening filter.
#whiten.proberange 1.0:20.0

# Assume that all detectors respond in the same direction to incident power.
array.signed

# Specify the acceptable range of sky-noise gains relative to the typical value.
array.gainrange=0.3:3.0

# Merge subscans into monolithic scans
subscans.merge

# Set the wavelength dependent quantities...
# First the 450um configuration...
[450um] forget 850um
#[450um] pixeldata {@CRUSH}/scuba2/pixel.s4a.dat
[450um] beam 7.6
[450um] grid 1.5
[450um] jansky 9966


# Then, the 850um configuration...
[850um]	forget 450um
#[850um] pixeldata {@CRUSH}/scuba2/pixel.s8d.dat
[850um] beam 14.3
[850um] grid 2.5
[850um] jansky 16756

# Initial 1/f filter at 10s timescale....
drifts 10.0 

# Assume a detector stability of 3 seconds. Even though it is longer than the
# true stability (which is ~1s), the slight 1/f excess in the extra band 
# should be more surgically dealt with by the noise whitening filter...
stability 10.0

# The best 850um SCUBA-2 pixels typically have much higher gain than average. 
# Thus, allow for a larger range of sky-gains than usual...
[450um] array.gainrange 0.3:3.0
[850um] array.gainrange 0.3:10.0

# Define sorthands for the correlated modalities/divisions, s.t. these can 
# be accessed more easily, e.g. as 'rows', 'cols', 'blocks'...
alias.he3 correlated.he3
alias.subarrays correlated.subarrays
alias.rows correlated.rows
alias.cols correlated.cols
alias.blocks correlated.blocks
alias.accel correlated.accel-mag

# Legacy aliases (MUX/pin vs row/col)
alias.mux correlated.rows
alias.pins correlated.cols

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
subarrays.gainrange -10.0:10.0

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
rows.gainrange -10.0:10.0

# Set the acceptable range of 'pin' gains, relative to the typical value.
# Each 'pin' is the collection of channels accross the MUXes, which are read
# out in the same position in the multiplexing scheme.
cols.gainrange -10.0:10.0

# Set the acceptable range of MUX (SQUID) gains, relative to the typical value
blocks.gainrange -10.0:10.0

# In the default reduction mode, do not decorrelate on MUXes and pins. And
# definitely disable these for the 'extended' mode...
forget rows
forget cols

# Require at least 30% of the pixels to be working for the scan to contribute
# to the final map.
mappingfraction 0.3

# The number of sections for perimeter pixel calculation
perimeter 300

# The suabarray rotations (deg)
# refined by Attila Kovacs, based on point-source response
s8a.rotation 0
s8b.rotation 89.3
s8c.rotation 179.9
s8d.rotation 270

s4a.rotation 179.7
s4b.rotation 89.7
s4c.rotation 0
s4d.rotation 269.7

# Subarray scalings
s8a.scale 1.00
s8b.scale 2.93
s8c.scale 2.56
s8d.scale 1.98

s4a.scale 1.59
s4b.scale 2.48
s4c.scale 3.75
s4d.scale 1.00

# First, we define the relations to the 183GHz radiometer. The definition
# below effectively makes the 183GHz value the implicit parameter 't' against 
# which all other relations are defined.
# Thus, all linear relations are measured against 183GHz radiometer values.
tau.183GHz.a 1.0
tau.183GHz.b 0.0

# Now, the appropriate relations defining the passband tau of GISMO vs the
# 225GHz radiometer value.
[850um] tau.scuba2.a 4.9
[850um] tau.scuba2.b -0.05
[450um] tau.scuba2.a 23.8
[450um] tau.scuba2.b -0.24

# The scaling of 186GHz tau to 225GHz:
tau.225GHz.a 1.25
tau.225GHz.b -0.009

# Now, the scaling relation to PWV vs 186GHz tau:
tau.pwv.a 25.3
tau.pwv.b -0.36

# The SCUBA-2 pixel size in mm (original value from sc2ast.c)
#pixelmm 1.135

# Determined by Attila Kovacs, based on point-source response...
pixelmm 1.1577

# Load the appropriate array geometries for the given date...
config {@CRUSH}/scuba2/new5.cfg
#mjd.[*:55168.19] config {@CRUSH}/scuba2/new2.cfg
#mjd.[55168.19:55621] config {@CRUSH}/scuba2/new3.cfg
#mjd.[55621:*] config {@CRUSH}/scuba2/new5.cfg


