>> Smoothing in deep does not preserve point source flux...

	-- Messages (InfoMessage, ErrorMessage, WarningMessage, StatusMessage
	   DebugMessage, Detail).

	-- Redo FITS tables read row-by-row using a modelRow...
	   (should be faster...)

!!	-- Better gain renormalization...
		-- either propagate to dependent modes
		-- or just renormalize for writing (cleaner!) 
	-- Updater (for tau.dat and calibration.dat files + pixeldata.cfg)
	        update.auto (check once daily)
        	'<instrument>/lastupdate' (times and versions)
	-- 'correlated.*.uniform' to set uniform gains?
   	   (only at the beginning or set every time?)
	-- Dynamic download/update for instrument data...
		versioning of files to allow append
		(in sepatate .version files)
		'update' or 'update.auto'
		What about permissions?
			create local config (with directories as needed)
			place config data there, with correct references...
	-- main image header edits by instrument...
	-- Scan horizontal coordinates only for GroundBased 
	   (getHorizontal(), setHorizontal(coords))
	-- Generic FFT filtering with response
		getSpectrum
		filter(spectrum, response)
		filter(response)
	-- highpass filtering to hp signals too...

	-- Generic FITS image reading:
	    OK non-square pixels
	    * multi-dimensional images (plane=n1[,n2...])
	      (or 0,[0...] as default)
	    OK transfer matrices (if no CDELT keys)
	    * Automatic detection of VARIANCE, NOISE, RMS images
	    * Automatic units...
	    .. Extra projection keys (poles etc.)
2.03+	-- Better map units (baseUnit, isBeamNormalized?)
	-- source.whiten?
	-- check double filtering
	-- 'aperture' for aperture conversion/scaling
	-- channel.dataIndex --> channel.getID()?
	-- private Scan.serialNo (use getID())
	-- faint.cfg's [extended] reenable some forgotten modalities.
	-- re-check accel-mag (before array) on instruments (sharc2/apex/gismo)
	   should do something about whitening also??
	-- Shadow scans
		* Scan.shadow, CRUSH.shadowSource?
		* call shadow operations on all signal estimation/removal.
		* console output on shadows?
		* write shadow scans
		* options:
			shadow
			shadow.sources	(default catalog 1Jy, point)
	-- Scan.parallelization
	   -- load management...
		size=frames*channels
		Navailable = Ncp * remainingSize / totalSize 	
		Npossible = remainingsize / size
		parallel = round|floor ? (Navailable / Npossible)
	-- Annuli, Polygon, and Point regions
	-- More debug (CRUSH.debug) 
		--> give traces for all exceptions
		--> Remove ? from NaN checks?
	-- Merge util with xcrush and update to it...
	-- Common TextFileParser (and TextTableParser?)...
	-- RMI (client/server) mode...
		-- InfoMessage, WarningMessage, ErrorMessage (with stubs)
		-- ScanSet (for fixed threads)
		-- Node/Job Manager
		-- node.readScan(), or node.addScan()
		-- Service discovery via UDP
		-- node.merge(SourceModel)
	-- parallelization
		-- drifts
		-- decorrelate
		-- gains
		-- weighting (all)
		-- despike
		-- filter
		-- reading/validation
	-- Orientable corrections (e.g. single scan rows...)
		-- Multimode analysis
		   (choose the highest mode with a certain power
		   fraction of the zero mode)
		-- mean rotation span from weighted center

